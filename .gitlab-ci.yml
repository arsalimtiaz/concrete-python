stages:
  - build
  - stylecheck
  - test

.dind:
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  tags:
    - docker

build:
  extends: .dind
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test-pep8:
  extends: .dind
  stage: stylecheck
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE tox -e pep8

test-docs:
  extends: .dind
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE tox -e docs

test-unit-tests:
  extends: .dind
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - touch coverage.xml
    - docker run --mount type=bind,source=$PWD/coverage.xml,target=/tmp/concrete-python/coverage.xml $CONTAINER_TEST_IMAGE tox -e cov tests
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

test-integration-tests:
  extends: .dind
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE tox -e py37 integration-tests

.test-compat:
  stage: test
  before_script:
    - python setup.py install
    - pip install flake8
    - pip install -r test-requirements.txt
  script:
    - flake8
    - pytest tests integration-tests
  only:
    - master
    - tags
  tags:
    - docker

test-py38:
  extends: .test-compat
  image: python:3.8

test-py39:
  extends: .test-compat
  image: python:3.9

test-py310:
  extends: .test-compat
  image: python:3.10
